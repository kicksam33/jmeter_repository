<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan">
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="prime number_100-200" enabled="false">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">for(int i=100;i&lt;=200;i++)
{
	log.info(&quot;numbersin main loop :&quot; +i);
int count=0;
for(int j=2;j&lt;i;j++)
{
	log.info(&quot;count :&quot; +count);
	log.info(&quot; i number in loop: &quot; +i);
	log.info(&quot;j number in loop: &quot; +j);
	if(i%j==0)
	{
		count++;
	}
}
if(count==0)
{
	log.info(&quot;it is a prime number : &quot; +i);
}
else
{
	log.info(&quot; its a prime number : &quot; +i);
}
}

</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Prime_no" enabled="false">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">for(int i=1;i&lt;=200;i++)
{
	log.info(&quot;number: &quot; +i);
	int count=0;
	for(int j=2;j&lt;i;j++)
	{
		if(i%j==0)
		{
			count++;
		}
	}
	if(count==0)
	{
		log.info(&quot;its a PRIME number&quot;);
	}
	else
	{
		log.info(&quot;it is NOT a PRIME number&quot;);
	}
}
</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="fibonecci series" enabled="false">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">int a=0,b=1,c;
for(int i=1;i&lt;=20;i++)

{
	c=a+b;
	
	log.info(&quot;Series :&quot; +c);
	a=b;
	b=c;
}
</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler" enabled="false">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">int i,j;
int count=0;
for(i=2;i&lt;=125;i++)
{
	log.info(&quot;number :&quot; +i);
	for(j=2;j&lt;i;j++)
	{
		if(i%j==0)
{
	count++;
}
	}
	if(count==0)
	{
		log.info(&quot;its PRIME NUMBER :&quot; +i)
	}else{
		log.info(&quot;IT IS NOT A PRIME :&quot; +i)
	}
}
</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="palindrome_2">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">int num=12321;
int temp,sum=0,a;
temp=num;
while(num&gt;0)
{
	a=num%10;
	sum=(sum*10)+a;
	num=num/10;
}
if(temp==sum)
{
	log.info(&quot;palindrome value&quot;);
}
else
{
	log.info(&quot;not a palindrome value&quot;);
}
</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="pyramid" enabled="false">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">int n=7

for(int i=1;i&lt;=n;i++)
{
String spaces = &apos; &apos; *(n -i)
String stars = &apos;*&apos;*(2*i-1)
log.info(spaces+stars)
}
</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="String length" enabled="false">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">String str=&quot;welcome to pt open source tool jmeter&quot;;
int count;
count=str.length();
log.info(&quot;string length is :&quot; +count);</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="String concat" enabled="false">
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="script">String str1=&quot;welcome to jmeter open source &quot;;
String rj=&quot;performance testing tool&quot;;
String str3;
str3=str1.concat(rj);
log.info(&quot;new string :&quot; +str3);
//x=num1.compareTo(num2);</stringProp>
          <stringProp name="scriptLanguage">groovy</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="String_count" enabled="false">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">String str=&quot;welcome to pt open source tool jmeter&quot;;
int count;
log.info(&quot;string is:&quot; +str);
count=str.length();
log.info(&quot;stringth length is :&quot; +count);
for(int i=0;i&lt;count;i++)
{
	log.info(&quot;character is :&quot; +str[i]);
}
</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="String_Reverse" enabled="false">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">String str=&quot;welcome to pt open source tool jmeter&quot;;
int len;
log.info(&quot;string is:&quot; +str);

str=str.reverse();
log.info(&quot;string reverse is:&quot; +str);
len=str.length();
log.info(&quot;stringth length is :&quot; +len);
for(int i=0;i&lt;len;i++)
{
	log.info(&quot;character is :&quot; +str[i]);
}
</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="String_count_reverse_i--" enabled="false">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">String str=&quot;welcome to pt open source tool jmeter&quot;;
int count;
log.info(&quot;string is:&quot; +str);

str=str.reverse();
log.info(&quot;string reverse is:&quot; +str);
count=str.length();
log.info(&quot;stringth length is :&quot; +count);
for(int i=count-1;i&gt;=0;i--)
{
	log.info(&quot;character is :&quot; +str[i]);
}
</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="String_compare_1" enabled="false">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">int num1=999;
int num2=9999;
x=num1.compareTo(num2);
log.info(&quot;compare numbers: &quot;+x);
</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="String_compare_2_asciivalue" enabled="false">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">int num1=133;
int num2=15;
x=num1.compareTo(num2);
log.info(&quot;compare numbers: &quot;+x);
int a=&apos;4&apos;;
int b=&apos;7&apos;;
log.info(&quot;ASCII VALUE :&quot; +a);
log.info(&quot;ASCII VALUE :&quot; +b);

</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="equals_condition" enabled="false">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">String str1=&quot;loadrunner&quot;;
String str2=&quot;loadrunner&quot;;
x=str1.equals(str2);
if(x==true)
{
log.info(&quot;equals string;&quot;);
} else {
	log.info(&quot;not equals string;&quot;);
}
</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler" enabled="false">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">String tool=&quot;jmeter tool for performance testing&quot;;
String domain=&quot;healthcare, banking, ecommerce&quot;;
String str=tool.concat(domain);
log.info(&quot;new string : &quot; +str);
</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="files_create" enabled="false">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">
String str1=&quot;welcome to jmeter performance testing tool&quot;;
String[]str2;
str2=str1.split(&apos;&apos;);
for(String str3:str2)
{
f= new FileOutputStream(&quot;C:/Users/DELL/OneDrive/Desktop/ITG/sai.txt&quot;,true);
p=new PrintStream(f);
p.print(str3);
f.close();



}</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="read program" enabled="false">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">File sam=new File(&quot;C:/Users/DELL/OneDrive/Desktop/ITG/sai.txt&quot;);
String str;
sam.withReader()
{ reader-&gt;
str=reader.readLine();
log.info(&quot;read data:&quot; +str);
}</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="read program next line" enabled="false">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">File sam = new File(&quot;C:/Users/DELL/OneDrive/Desktop/ITG/sam5.txt&quot;)
String str
sam.withReader
{ reader -&gt;
    
    while ((str = reader.readLine()) != null)
    {
        log.info(&quot;Read data: &quot; + str)
    }
}
</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler" enabled="false">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">
String str1=&quot;welcome to jmeter performance testing tool&quot;;
String[]str2;
str2=str1.split(&apos; &apos;);
for(String str3:str2)
{
f= new FileOutputStream(&quot;C:/Users/DELL/OneDrive/Desktop/ITG/sample5.txt&quot;,true);
p=new PrintStream(f);
p.println(str);
f.close();
}</stringProp>
        </JSR223Sampler>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler" enabled="false">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">int a=9,b=65,c;
for(int i=1;i&lt;=10;i++)
{
	c=a+b;
	log.info(&quot;series : &quot; +c);
	a=b;
	b=c;
}
</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler" enabled="false">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">int num=123454321;
int temp,sum=0,a;
temp=num;
while(num&gt;0)
{
	a=num%10;
	sum=(sum*10)+a;
	num=num/10;
}
if(temp==sum){
	log.info(&quot;its a palindrome number&quot;);
}else{
	log.info(&quot;it is not a palindrome number&quot;);
}
</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler" enabled="false">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">String str=&quot;welcome to pt jmeter tool perfrmce testing&quot;
f=new FileOutputStream(&quot;C:/Users/DELL/OneDrive/Desktop/ITG/sam3.txt&quot;,true);
p=new PrintStream(f);
p.println(str);
f.close();</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="false">
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="script">String str=&quot;welcome to pt jmeter tool perfrmce testing&quot;
f=new FileOutputStream(&quot;C:/Users/DELL/OneDrive/Desktop/ITG/sam5.txt&quot;,true);
p=new PrintStream(f);
p.println(str);
f.close();
</stringProp>
          <stringProp name="scriptLanguage">groovy</stringProp>
        </JSR223PostProcessor>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler" enabled="false">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">String sam=&quot;welcome to jmeter tool performance testing tool&quot;;
int len,a;
len=sam.length();
log.info(&quot;total length is:&quot; +len);
for(a=0;a&lt;len;a++)
{
	file=new FileOutputStream(&quot;C:/Users/DELL/OneDrive/Desktop/ITGsample1.txt&quot;,true);
	file2=new PrintStream(file);
	file2.println(tool[a]);
	file.colse();

}
</stringProp>
        </JSR223Sampler>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
